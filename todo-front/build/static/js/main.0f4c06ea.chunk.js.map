{"version":3,"sources":["components/Todo.js","APIFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","readableDate","Date","dateCreated","toDateString","deadline","readableDeadline","editingTemplate","onSubmit","e","preventDefault","editTask","id","priority","className","type","value","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","htmlFor","name","deleteTask","API_URL","is_done","a","axios","post","newTodo","data","delete","message","payload","put","get","todos","createTodo","deleteTodo","updateTodo","getAllTodos","App","setTodos","setName","setDeadline","setPriority","updateTodos","APIFunctions","console","log","fetchTodoAndSetTodos","useEffect","evt","todoId","find","todo","updatedTodo","map","newPrio","taskList","task","date_created","autoComplete","placeholder","min","max","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEe,SAASA,EAAKC,GAAQ,IAAD,EACFC,oBAAS,GADP,mBAC3BC,EAD2B,KAChBC,EADgB,OAEJF,mBAAS,IAFL,mBAE3BG,EAF2B,KAElBC,EAFkB,KAI9BC,EADO,IAAIC,KAAKP,EAAMQ,aACFC,eAExB,GAAsB,MAAlBT,EAAMU,eAGR,IACIC,EADe,IAAIJ,KAAKP,EAAMU,UACED,eActC,IAAMG,EACJ,sBAAMC,SARR,SAAsBC,GACpBA,EAAEC,iBACFf,EAAMgB,SAAShB,EAAMiB,GAAIjB,EAAMkB,SAAUd,GACzCC,EAAW,IACXF,GAAW,IAIX,SACE,sBAAKgB,UAAU,YAAf,UACE,gCACE,+CAEF,uBACEF,GAAIjB,EAAMiB,GACVE,UAAU,kBACVC,KAAK,OACLC,MAAOjB,EACPkB,SAtBR,SAAsBR,GACpBT,EAAWS,EAAES,OAAOF,UAuBhB,sBAAKF,UAAU,YAAf,UACE,yBACEC,KAAK,SACLD,UAAU,SACVK,QAAS,kBAAMrB,GAAW,IAH5B,mBAME,sBAAMgB,UAAU,kBAAhB,kBAEF,yBAAQC,KAAK,SAASD,UAAU,SAAhC,iBAEE,sBAAMA,UAAU,+BAMpBM,EACJ,sBAAKN,UAAU,YAAf,UACE,uBACEF,GAAIjB,EAAMiB,GACVG,KAAK,WACLD,UAAU,UACVO,eAAgB1B,EAAM2B,UACtBL,SAAU,kBAAMtB,EAAM4B,oBAAoB5B,EAAMiB,OAElD,wBAAOE,UAAU,aAAaU,QAAS7B,EAAMiB,GAA7C,UACGjB,EAAM8B,KACP,uBAFF,aAEsB9B,EAAMkB,SAC1B,uBAHF,YAGqBZ,EACnB,uBAJF,aAIsBK,KAEtB,sBAAKQ,UAAU,YAAf,UACE,yBACEC,KAAK,SACLD,UAAU,SACVK,QAAS,kBAAMrB,GAAW,IAH5B,uBAKY,sBAAMgB,UAAU,uBAE5B,yBACEC,KAAK,SACLD,UAAU,gBACVK,QAAS,kBAAMxB,EAAM+B,WAAW/B,EAAMiB,KAHxC,yBAKc,sBAAME,UAAU,uBACpB,UAIhB,OAAO,oBAAIA,UAAU,OAAd,SAAsBjB,EAAYU,EAAkBa,I,0BCvFvDO,EAAU,wD,4CAEhB,WAA0BF,EAAMZ,EAAUe,EAASvB,GAAnD,iBAAAwB,EAAA,sEACkCC,IAAMC,KAAKJ,EAAS,CAClDF,OAAMZ,WAAUe,UAASvB,aAF7B,uBACgB2B,EADhB,EACUC,KADV,kBAISD,GAJT,4C,kEAOA,WAA0BpB,GAA1B,eAAAiB,EAAA,sEACwBC,IAAMI,OAAN,UAAgBP,GAAhB,OAA0Bf,IADlD,cACQuB,EADR,yBAESA,GAFT,4C,kEAKA,WAA0BvB,EAAIwB,GAA9B,iBAAAP,EAAA,sEACkCC,IAAMO,IAAN,UAAaV,GAAb,OAAuBf,GAAMwB,GAD/D,uBACgBJ,EADhB,EACUC,KADV,kBAESD,GAFT,4C,kEAKA,8BAAAH,EAAA,sEACgCC,IAAMQ,IAAIX,GAD1C,uBACgBY,EADhB,EACUN,KADV,kBAESM,GAFT,4C,sBAKe,OAAEC,W,kDAAYC,W,4CAAYC,W,8CAAYC,Y,4CCkItCC,MAtJf,WAAgB,IAAD,EACahD,mBAAS,IADtB,mBACN2C,EADM,KACCM,EADD,OAEWjD,mBAAS,IAFpB,gCAGWA,mBAAS,KAHpB,mBAGN6B,EAHM,KAGAqB,EAHA,OAImBlD,mBAAS,MAJ5B,mBAINS,EAJM,KAII0C,EAJJ,OAKmBnD,mBAAS,IAL5B,mBAKNiB,EALM,KAKImC,EALJ,KA4Bb,SAASC,KACmB,uCAAG,4BAAApB,EAAA,sEACPqB,EAAaP,cADN,OACrBJ,EADqB,OAE3BM,EAASN,GACTY,QAAQC,IAAIb,GAHe,2CAAH,qDAK1Bc,GAfFC,qBAAU,YACkB,uCAAG,4BAAAzB,EAAA,sEACPqB,EAAaP,cADN,OACrBJ,EADqB,OAE3BM,EAASN,GACTY,QAAQC,IAAIb,GAHe,2CAAH,qDAK1Bc,KACC,IAWH,IAAMb,EAAU,uCAAG,WAAOe,GAAP,eAAA1B,EAAA,6DACjB0B,EAAI7C,iBADa,SAEGwC,EAAaV,WAAWf,EAAMZ,EAAU,EAAGR,GAF9C,OAEb2B,EAFa,OAGjBmB,QAAQC,IAAI/C,GACZwC,EAAS,GAAD,mBAAKN,GAAL,CAAYP,KACpBc,EAAQ,IACRE,EAAY,IACZD,EAAY,IACZE,IACAF,EAAY,MATK,4CAAH,sDAYVrB,EAAU,uCAAG,WAAOd,GAAP,SAAAiB,EAAA,sEACXqB,EAAaT,WAAW7B,GADb,OAEjBiC,EAASN,GACTU,IAHiB,2CAAH,sDAMV1B,EAAmB,uCAAG,WAAOiC,GAAP,iBAAA3B,EAAA,6DACpBO,EAAU,CACdX,KAAMc,EAAMkB,MAAK,SAACC,GAAD,OAAUA,EAAK9C,KAAO4C,KAAQ/B,KAC/CG,SAAUW,EAAMkB,MAAK,SAACC,GAAD,OAAUA,EAAK9C,KAAO4C,KAAQ5B,QACnDf,SAAU0B,EAAMkB,MAAK,SAACC,GAAD,OAAUA,EAAK9C,KAAO4C,KAAQ3C,SACnDR,SAAUkC,EAAMkB,MAAK,SAACC,GAAD,OAAUA,EAAK9C,KAAO4C,KAAQnD,UAL3B,SAOA6C,EAAaR,WAAWc,EAAQpB,GAPhC,OAOpBuB,EAPoB,OAQ1Bd,EAASN,EAAMqB,KAAI,SAACF,GAAD,OAAWA,EAAK9C,KAAO4C,EAASG,EAAcD,MACjET,IAT0B,2CAAH,sDAYnBtC,EAAQ,uCAAG,WAAO6C,EAAQK,EAAS9D,GAAxB,iBAAA8B,EAAA,6DACTO,EAAU,CACdX,KAAM1B,EACN6B,QAASW,EAAMkB,MAAK,SAACC,GAAD,OAAUA,EAAK9C,KAAO4C,KAAQ5B,QAClDvB,SAAUkC,EAAMkB,MAAK,SAACC,GAAD,OAAUA,EAAK9C,KAAO4C,KAAQnD,SACnDQ,SAAUgD,GALG,SAQWX,EAAaR,WAAWc,EAAQpB,GAR3C,OAQTuB,EARS,OASfd,EAASN,EAAMqB,KAAI,SAACF,GAAD,OAAWA,EAAK9C,KAAO4C,EAASG,EAAcD,MACjET,IAVe,2CAAH,0DAaRa,EAAWvB,EAAMqB,KAAI,SAACG,GAAD,OACzB,cAACrE,EAAD,CACEkB,GAAImD,EAAKnD,GACTa,KAAMsC,EAAKtC,KACXH,UAAWyC,EAAKnC,QAChBzB,YAAa4D,EAAKC,aAClBnD,SAAUkD,EAAKlD,SAEfR,SAAU0D,EAAK1D,SACfkB,oBAAqBA,EACrBG,WAAYA,EACZc,WAAYA,EACZ7B,SAAUA,GALLoD,EAAKnD,OASd,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,sBAEA,qBAAIA,UAAU,YAAd,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAMA,UAAU,YAAYN,SAAUgC,EAAtC,UACE,uBAAO1B,UAAU,aAAjB,uBACA,uBACEC,KAAK,OACLH,GAAG,gBACHE,UAAU,kBACVW,KAAK,YACLwC,aAAa,MACbjD,MAAOS,EACPR,SAxGZ,SAA0BsC,GACxBT,EAAQS,EAAIrC,OAAOF,UAyGX,uBACA,uBAAOF,UAAU,aAAjB,sBACA,uBACEC,KAAK,OACLH,GAAG,gBACHE,UAAU,sBACVW,KAAK,WACLT,MAAOX,EACPY,SA1GZ,SAA8BsC,GAC5BR,EAAYQ,EAAIrC,OAAOF,QA0GbkD,YAAY,KAEd,uBACA,uBAAOpD,UAAU,aAAjB,sBACA,uBACEC,KAAK,SACLoD,IAAI,IACJC,IAAI,KACJxD,GAAG,oBACHE,UAAU,sBACVW,KAAK,gBACLwC,aAAa,MACbjD,MAAOH,EACPI,SA5HZ,SAA8BsC,GAC5BP,EAAYO,EAAIrC,OAAOF,UA6Hf,uBACA,wBAAQD,KAAK,SAASD,UAAU,SAAhC,sBAKJ,uBACA,qBAAKA,UAAU,iBAAf,SAAiCgD,WC1I1BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f4c06ea.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  let date = new Date(props.dateCreated);\r\n  let readableDate = date.toDateString();\r\n\r\n  if (props.deadline == null) {\r\n    var readableDeadline;\r\n  } else {\r\n    var deadlineDate = new Date(props.deadline);\r\n    var readableDeadline = deadlineDate.toDateString();\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, props.priority, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"task-form\">\r\n        <label>\r\n          <span>Task name</span>\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"input-task-name\"\r\n          type=\"name\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={() => setEditing(false)}\r\n          >\r\n            Cancel\r\n            <span className=\"visually-hidden\"> </span>\r\n          </button>\r\n          <button type=\"submit\" className=\"button\">\r\n            Save\r\n            <span className=\"visually-hidden\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"todo-item\">\r\n      <input\r\n        id={props.id}\r\n        type=\"checkbox\"\r\n        className=\"checked\"\r\n        defaultChecked={props.completed}\r\n        onChange={() => props.toggleTaskCompleted(props.id)}\r\n      />\r\n      <label className=\"todo-label\" htmlFor={props.id}>\r\n        {props.name}\r\n        <br></br>Priority: {props.priority}\r\n        <br></br>Created: {readableDate}\r\n        <br></br>Deadline: {readableDeadline}\r\n      </label>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          onClick={() => setEditing(true)}\r\n        >\r\n          Edit task <span className=\"visually-hidden\"></span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"delete-button\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete task <span className=\"visually-hidden\"></span>\r\n        </button>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import axios from \"axios\"\r\n\r\nconst API_URL = \"https://tamk-4a00ez62-3002-group24.herokuapp.com/api/\"\r\n\r\nasync function createTodo(name, priority, is_done, deadline) {\r\n  const { data: newTodo } = await axios.post(API_URL, { \r\n    name, priority, is_done, deadline\r\n  })\r\n  return newTodo\r\n}\r\n\r\nasync function deleteTodo(id) {\r\n  const message = await axios.delete(`${API_URL}${id}`)\r\n  return message\r\n}\r\n\r\nasync function updateTodo(id, payload) {\r\n  const { data: newTodo } = await axios.put(`${API_URL}${id}`, payload)\r\n  return newTodo\r\n}\r\n\r\nasync function getAllTodos() {\r\n  const { data: todos } = await axios.get(API_URL)\r\n  return todos\r\n}\r\n\r\nexport default { createTodo, deleteTodo, updateTodo, getAllTodos }","import React, { useState, useEffect } from \"react\";\r\nimport Todo from \"./components/Todo\";\r\nimport \"./App.css\";\r\nimport APIFunctions from \"./APIFunctions.js\";\r\n\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todo, setTodo] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(null);\r\n  const [priority, setPriority] = useState(\"\");\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handlePriorityChange(evt) {\r\n    setPriority(evt.target.value);\r\n  }\r\n\r\n  function handleDeadlineChange(evt) {\r\n    setDeadline(evt.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchTodoAndSetTodos = async () => {\r\n      const todos = await APIFunctions.getAllTodos();\r\n      setTodos(todos);\r\n      console.log(todos);\r\n    };\r\n    fetchTodoAndSetTodos();\r\n  }, []);\r\n\r\n  function updateTodos() {\r\n    const fetchTodoAndSetTodos = async () => {\r\n      const todos = await APIFunctions.getAllTodos();\r\n      setTodos(todos);\r\n      console.log(todos);\r\n    };\r\n    fetchTodoAndSetTodos();\r\n  }\r\n\r\n  const createTodo = async (evt) => {\r\n    evt.preventDefault();\r\n    let newTodo = await APIFunctions.createTodo(name, priority, 0, deadline);\r\n    console.log(deadline);\r\n    setTodos([...todos, newTodo]);\r\n    setName(\"\");\r\n    setPriority(\"\");\r\n    setDeadline(\"\");\r\n    updateTodos();\r\n    setDeadline(null);\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    await APIFunctions.deleteTodo(id);\r\n    setTodos(todos);\r\n    updateTodos();\r\n  };\r\n\r\n  const toggleTaskCompleted = async (todoId) => {\r\n    const payload = {\r\n      name: todos.find((todo) => todo.id === todoId).name,\r\n      is_done: !todos.find((todo) => todo.id === todoId).is_done,\r\n      priority: todos.find((todo) => todo.id === todoId).priority,\r\n      deadline: todos.find((todo) => todo.id === todoId).deadline,\r\n    };\r\n    const updatedTodo = await APIFunctions.updateTodo(todoId, payload);\r\n    setTodos(todos.map((todo) => (todo.id === todoId ? updatedTodo : todo)));\r\n    updateTodos();\r\n  };\r\n\r\n  const editTask = async (todoId, newPrio, newName) => {\r\n    const payload = {\r\n      name: newName,\r\n      is_done: todos.find((todo) => todo.id === todoId).is_done,\r\n      deadline: todos.find((todo) => todo.id === todoId).deadline,\r\n      priority: newPrio,\r\n    };\r\n\r\n    const updatedTodo = await APIFunctions.updateTodo(todoId, payload);\r\n    setTodos(todos.map((todo) => (todo.id === todoId ? updatedTodo : todo)));\r\n    updateTodos();\r\n  };\r\n\r\n  const taskList = todos.map((task) => (\r\n    <Todo\r\n      id={task.id}\r\n      name={task.name}\r\n      completed={task.is_done}\r\n      dateCreated={task.date_created}\r\n      priority={task.priority}\r\n      key={task.id}\r\n      deadline={task.deadline}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      createTodo={createTodo}\r\n      editTask={editTask}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"App-header\">ToDo App</h1>\r\n\r\n      <ul className=\"todo-list\">\r\n        <div className=\"form\">\r\n          <form className=\"task-form\" onSubmit={createTodo}>\r\n            <label className=\"todo-label\">Task name</label>\r\n            <input\r\n              type=\"name\"\r\n              id=\"new-todo-name\"\r\n              className=\"input-task-name\"\r\n              name=\"task name\"\r\n              autoComplete=\"off\"\r\n              value={name}\r\n              onChange={handleNameChange}\r\n            />\r\n            <br></br>\r\n            <label className=\"todo-label\">Deadline</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"deadline-date\"\r\n              className=\"input-task-deadline\"\r\n              name=\"deadline\"\r\n              value={deadline}\r\n              onChange={handleDeadlineChange}\r\n              placeholder=\"\"\r\n            />\r\n            <br></br>\r\n            <label className=\"todo-label\">Priority</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              id=\"new-todo-priority\"\r\n              className=\"input-task-priority\"\r\n              name=\"task priority\"\r\n              autoComplete=\"off\"\r\n              value={priority}\r\n              onChange={handlePriorityChange}\r\n            />\r\n            <br></br>\r\n            <button type=\"submit\" className=\"button\">\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"item-container\">{taskList}</div>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n/* const DATA = [\r\n  { id: \"todo-0\", name: \"Eat\", completed: false },\r\n \r\n];\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App tasks={DATA} />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n); */\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}